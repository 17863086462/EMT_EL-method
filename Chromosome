classdef Chromosome 
    properties
        rnvec; 
        factorial_costs;
        factorial_ranks;
        scalar_fitness;
        skill_factor;
    end    
    methods    
 
        function object = initialize(object,D,select_band)   
            object.rnvec=zeros(1,D);
            Selected=randperm(D,select_band);
            object.rnvec(Selected)=object.rnvec(Selected)+1;  
        end     
        function [object,calls] = evaluate(object,Tasks,p_il,no_of_tasks,options,train_set,predict_set,train_label,test_label)  
            if object.skill_factor == 0
                calls=0;
                for i = 1:no_of_tasks
                    [object.factorial_costs(i),xxx,funcCount]=fnceval(Tasks(i),object.rnvec,train_set,predict_set,train_label,test_label);
                    calls = calls + funcCount;
                end
            else
                object.factorial_costs(1:no_of_tasks)=inf;
                for i = 1:no_of_tasks
                    if object.skill_factor == i
                        [object.factorial_costs(object.skill_factor),object.rnvec,funcCount]=fnceval(Tasks(object.skill_factor),object.rnvec,train_set,predict_set,train_label,test_label);
                        calls = funcCount;
                        break;
                    end
                end
            end
        end
        
        function [object,calls] = evaluate_SOO(object,Task,p_il,options,train_set,predict_set,train_label,test_label)   
            [object.factorial_costs,object.rnvec,funcCount]=fnceval(Task,object.rnvec,train_set,predict_set,train_label,test_label);
            calls = funcCount;
        end
        
     function object=crossover(object,parent1,parent2)
            dim=length(parent1.rnvec);
            %object.rnvec=0.5*((1+cf).*p1.rnvec + (1-cf).*p2.rnvec);
            %object.rnvec(object.rnvec>1)=1;
            %object.rnvec(object.rnvec<0)=0;
            par1_vec=parent1.rnvec';
            par2_vec=parent2.rnvec';
            selectpoints=[par1_vec par2_vec];
            n=size(selectpoints,1);
            newpoint=selectpoints; 
            curpoint_num=sum(par1_vec);
            if newpoint(:,1)==newpoint(:,2)  
                condition=1;
            else
                condition=0;
            end
            switch condition    
                case 1  
                    num=size(find(newpoint(:,1)),1);    
                    newpoint(:,1:2)=zeros(n,2);
                    for i=1:2
                        newpointindex=randperm(dim,num)'; 
                        newpoint(newpointindex,i)=newpoint(newpointindex,i)+1;
                    end
                case 0 
                    index1=find(newpoint(:,1)); 
                    index2=find(newpoint(:,2));    
                    index1_index2=setdiff(index1,index2);   
                    index2_index1=setdiff(index2,index1);     
                    num1=length(index1);
                    num2=length(index2);      
                    num1_1=length(index1_index2); 
                    num2_2=length(index2_index1);       
                    cross_maxnum=min(num1_1,num2_2); 
                    if cross_maxnum==0 
                        cross_maxnum=1; 
                        if num1_1<num2_2 %
                             index1_index2=index1;
                             num1_1=num1;
                        else
                            index2_index1=index2;
                            num2_2=num2;
                        end
                    end
       
                    cross_num=randi([1,cross_maxnum],1,1); 
                    cross_value_position1=randperm(num1_1,cross_num)'; 
                    cross_value_position2=randperm(num2_2,cross_num)'; 
                    cross_position1=randperm(num1,cross_num)';
                    cross_position2=randperm(num2,cross_num)';    
                    b=index1_index2(cross_value_position1,1); 
                    c=index2_index1(cross_value_position2,1);       
                    index1(cross_position1,1)=c;
                    index2(cross_position2,1)=b;       
                    newpoint=zeros(n,2);
                    newpoint(index1,1)=newpoint(index1,1)+1;
                    newpoint(index2,2)=newpoint(index2,2)+1; 
            end
        if rand(1)<0.5 
            newpointf=newpoint(:,1);
        else
            newpointf=newpoint(:,2);
        end
        newpointf_index=find(newpointf); 
        if sum(newpointf)~=curpoint_num 
            if length(newpointf_index)<curpoint_num 
                add_num=curpoint_num-sum(newpointf); 
                allband_index=[1:curpoint_num]';
                extra_index=setdiff(allband_index,newpointf_index);
                indexf_add=extra_index(randperm(length(extra_index),add_num),1);
                newpointf(indexf_add,1)=newpointf(indexf_add,1)+1;
            end
            if sum(newpointf)>curpoint_num 
                delete_num=sum(newpointf)-curpoint_num;
                delete_index=newpointf_index(randperm(length(newpointf_index),delete_num),1);
                newpointf(delete_index,1)=0;
            end
        end
       object.rnvec=newpointf';
 end
        
        function object=mutate(object,p,prob_mut)
            rnvec_temp=p.rnvec; 
            sel_index=find(rnvec_temp);
            unsel_index=setdiff(1:length(rnvec_temp),sel_index);
            for i=1:length(rnvec_temp)
                if rand(1)<prob_mut
                    if rnvec_temp(i)==1
                        rnvec_temp(i)=0;
                        off_index=randperm(length(unsel_index),1);
                        rnvec_temp(unsel_index(off_index))=1;
                    else
                        rnvec_temp(i)=1;
                        off_index=randperm(length(sel_index),1);
                        rnvec_temp(sel_index(off_index))=0;
                    end
                end
            sel_index=find(rnvec_temp);
            unsel_index=setdiff(1:length(rnvec_temp),sel_index); 
            end  
           object.rnvec = rnvec_temp;          
        end    
    end 
end
